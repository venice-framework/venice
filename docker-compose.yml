---
version: "3.3"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.4.1
    hostname: zookeeper
    container_name: zookeeper
    # ports 2181, 2888, and 3888 are exposed by default
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    restart: unless-stopped
    volumes:
      - ./data/zookeeper/data:/var/lib/zookeeper/data
      - ./data/zookeeper/log:/var/lib/zookeeper/log
    networks:
      - venice

  broker-1:
    image: confluentinc/cp-kafka:5.4.1
    hostname: broker-1
    container_name: broker-1
    restart: unless-stopped

    depends_on:
      - zookeeper
    # port 9092 is exposed by default
    environment:
      # parameters here:
      # https://kafka.apache.org/documentation/#configuration
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      # KAFKA_ADVERTISED_LISTENERS is a comma-separated list of listeners with their
      # host/IP and port. This is the metadata thatâ€™s passed back to clients.
      # https://www.confluent.io/blog/kafka-listeners-explained/
      # the use of PLAINTEXT is related to the security.inter.broker.protocol:
      # https://docs.confluent.io/current/installation/configuration/broker-configs.html
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-1:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "$AUTO_CREATE_TOPICS"
      KAFKA_LOG_RETENTION_BYTES: $LOG_RETENTION_BYTES
      KAFKA_LOG_RETENTION_HOURS: $LOG_RETENTION_HOURS
      KAFKA_DEFAULT_REPLICATION_FACTOR: $DEFAULT_REPLICATION
      KAFKA_NUM_PARTITIONS: $DEFAULT_PARTITIONS
    volumes:
      - ./data/broker-1/data:/var/lib/kafka/data
    networks:
      - venice

  broker-2:
    image: confluentinc/cp-kafka:5.4.1
    hostname: broker-2
    container_name: broker-2
    restart: unless-stopped

    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-2:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "$AUTO_CREATE_TOPICS"
      KAFKA_LOG_RETENTION_BYTES: $LOG_RETENTION_BYTES
      KAFKA_LOG_RETENTION_HOURS: $LOG_RETENTION_HOURS
      KAFKA_DEFAULT_REPLICATION_FACTOR: $DEFAULT_REPLICATION
      KAFKA_NUM_PARTITIONS: $DEFAULT_PARTITIONS
    networks:
      - venice
    volumes:
      - ./data/broker-2/data:/var/lib/kafka/data

  broker-3:
    image: confluentinc/cp-kafka:5.4.1
    hostname: broker-3
    container_name: broker-3
    restart: unless-stopped
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-3:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "$AUTO_CREATE_TOPICS"
      KAFKA_LOG_RETENTION_BYTES: $LOG_RETENTION_BYTES
      KAFKA_LOG_RETENTION_HOURS: $LOG_RETENTION_HOURS
      KAFKA_DEFAULT_REPLICATION_FACTOR: $DEFAULT_REPLICATION
      KAFKA_NUM_PARTITIONS: $DEFAULT_PARTITIONS
    networks:
      - venice
    volumes:
      - ./data/broker-3/data:/var/lib/kafka/data

  schema-registry:
    image: confluentinc/cp-schema-registry:5.4.1
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - broker-1
      - broker-2
      - broker-3
    # port 8081 is exposed by default
    # publish port to work with venice CLI
    ports:
      - 8081:8081
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      # zookeeper election is deprecated, use kafka instead
      # https://docs.confluent.io/current/schema-registry/installation/config.html#kafkastore-bootstrap-servers
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://broker-1:9092,PLAINTEXT://broker-2:9092,PLAINTEXT://broker-3:9092
      # Comma-separated list of listeners that listen for API requests over
      # either HTTP or HTTPS. If a listener uses HTTPS, the appropriate SSL
      # configuration parameters need to be set as well.
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
      DEBUG: "true"
    networks:
      - venice

  producer:
    image: veniceframework/python-producer-test-key-string
    container_name: producer
    depends_on:
      - broker-1
      - broker-2
      - broker-3
      - schema-registry
    environment:
      BROKER: "broker-1:9092"
      SCHEMA_REGISTRY_HOST: "schema-registry"
      SCHEMA_REGISTRY_PORT: 8081
      SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      TOPIC_NAME: "$TOPIC_NAME"
    networks:
      - venice

  ksql-server:
    image: confluentinc/cp-ksql-server:5.4.1
    hostname: ksql-server
    container_name: ksql-server
    depends_on:
      - broker-1
      - broker-2
      - broker-3
      - schema-registry
    # no ports are exposed by default
    ports:
      - 8088:8088
    environment:
      KSQL_LISTENERS: http://0.0.0.0:8088
      KSQL_BOOTSTRAP_SERVERS: broker-1:9092,broker-2:9092,broker-3:9092
      KSQL_KSQL_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"
      KSQL_KSQL_SINK_REPLICAS: 2
    networks:
      - venice

  kafka-connect:
    image: confluentinc/cp-kafka-connect:5.4.1
    hostname: kafka-connect
    container_name: kafka-connect
    depends_on:
      - broker-1
      - broker-2
      - broker-3
      - schema-registry
    # exposes ports 8083 and 9092 by default
    # publish port to work with venice CLI
    ports:
      - 8083:8083
    environment:
      # Required Kafka Connect Settings:
      # https://docs.confluent.io/current/installation/docker/config-reference.html#required-kafka-connect-settings
      #
      # All Settings:
      # https://docs.confluent.io/current/connect/references/allconfigs.html
      #
      ###### REQUIRED SETTINGS ######
      CONNECT_BOOTSTRAP_SERVERS: broker-1:9092,broker-2:9092,broker-3:9092
      CONNECT_GROUP_ID: venice
      # The values for these three storage topics must be the same for all
      # workers with the same group.id
      CONNECT_CONFIG_STORAGE_TOPIC: "connect-1-config"
      CONNECT_OFFSET_STORAGE_TOPIC: "connect-1-offsets"
      CONNECT_STATUS_STORAGE_TOPIC: "connect-1-status"
      # These control the format of the data that will be written to Kafka for
      # source connectors or read from Kafka for sink connectors
      CONNECT_KEY_CONVERTER: "io.confluent.connect.avro.AvroConverter"
      CONNECT_VALUE_CONVERTER: "io.confluent.connect.avro.AvroConverter"
      # Converter class for internal values that implements the Converter interface
      # TODO: verify what these do
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
      ###### END REQUIRED SETTINGS ######
      # This is the default port
      CONNECT_REST_PORT: 8083
      # These were not listed in the all settings page, but used in the demo above and tutorials
      # https://docs.confluent.io/5.0.0/installation/docker/docs/installation/connect-avro-jdbc.html#starting-up-confluent-platform-and-kafka-connect
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      # These should always be at least 3 for a production system
      # The defaults are 3
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 3
    networks:
      - venice
    command:
      # In the command section, $ are replaced with $$ to avoid the error 'Invalid interpolation format for "command" option'
      # Additional connector plugs can be added here to be installed on launch. Comment out if not needed
      - bash
      - -c
      - |
        echo "Installing connector plugins"
        confluent-hub install --no-prompt jcustenborder/kafka-connect-twitter:0.3.33
        # confluent-hub install --no-prompt neo4j/kafka-connect-neo4j:1.0.2
        #
        echo "Launching Kafka Connect worker"
        /etc/confluent/docker/run &
        #
        sleep infinity
  connector-init:
    image: alpine:3.11
    container_name: connector-init
    # if you need to debug connector setup uncomment the next two lines.
    # tty: true
    # stdin_open: true
    depends_on:
      - kafka-connect
      - postgres
    command:
      - sh
      - -c
      - |
        apk add curl
        apk add jq
        echo "Waiting for kafka-connect to start listening"
        while [ $$(curl -s -o /dev/null -w %{http_code} http://kafka-connect:8083/connectors) -eq 000 ] ; do
          echo -e $$(date) " Kafka Connect listener HTTP state: " $$(curl -s -o /dev/null -w %{http_code} http://kafka-connect:8083/connectors) " (waiting for 200)"
          sleep 5
        done
        echo "kafka-connect is ready"
        nc -vz kafka-connect 8083
        #
        chmod 777 -R connectors
        for f in ./connectors/*
        do /
        echo "Processing $$f file..."
        jq . $$f |
        exec curl -s -X POST -d @- http://kafka-connect:8083/connectors -H "Content-Type: application/json" -w "\n"
        done
        echo "All connectors added..."

    networks:
      - venice
    volumes:
      - ./connectors:/connectors

  postgres:
    # https://hub.docker.com/_/postgres
    # docker exec -it postgres psql --username=venice_user --dbname=MY_DB
    build: ./postgres
    container_name: postgres
    # exposes port 5432 by default
    expose:
      - $POSTGRES_PORT
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
    restart: unless-stopped
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    networks:
      - venice

  kafka-ui:
    # https://hub.docker.com/r/obsidiandynamics/kafdrop
    image: obsidiandynamics/kafdrop:3.24.0
    container_name: kafka-ui
    ports:
      - 9000:9000
    depends_on:
      - broker-1
      - broker-2
      - broker-3
    environment:
      KAFKA_BROKERCONNECT: broker-1:9092,broker-2:9092,broker-3:9092
      JVM_OPTS: "-Xms32M -Xmx64M"
      SERVER_PORT: 9000
      SERVER_SERVLET_CONTEXTPATH: "/"
      MESSAGE_FORMAT: AVRO
      SCHEMAREGISTRY_CONNECT: http://schema-registry:8081
      #JMX_PORT:
      #HOST:
    networks:
      - venice

networks:
  venice:
    driver: bridge # bridge is the default

# licensing info for confluent images: https://docs.confluent.io/current/installation/docker/image-reference.html
